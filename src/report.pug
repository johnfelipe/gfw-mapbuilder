extends jade/layout.pug

block append styles
  link(rel='stylesheet', href='%REPORT_CSS%')
  link(rel='stylesheet', href='https://js.arcgis.com/%ESRI_VERSION%/esri/css/esri.css')
  link(rel='stylesheet', href='https://js.arcgis.com/%ESRI_VERSION%/dijit/themes/tundra/tundra.css')


block append content
  div.report.inner
    header.report-header.flex
      div.report-header__logo-container
        a#logo-anchor(target='_blank')
          img#logo.report-header__logo
      div.report-header__title-container
        h1#report-title.report-header__title
        h2#report-subtitle.report-header__subtitle

    div#map.map
    div#popup-content.popup-content
    div#results-container.results-container

block append esri-script
  script.
    console.log('window._app', window._app);

    var _app = {
        cache: %META_VERSION%,
        esri: %ESRI_VERSION%,
        base: window._app && window._app.base ? window._app.base : ''
    };
    console.log('_app', _app);

    function makePath (base, path) {
      var position = base.length - 1;
      return !path ?
        (base.indexOf('/', position) !== position ? base + '/' : base) :
        (base.indexOf('/', position) !== position ?
          base + '/' + path :
          base + path
        )
    }
    function getResourcePath (path) {
      var position = path.length - 1;
      return path.indexOf('/', position) === position ? path.slice(0, -1) : path;
    }
    // Change this to '' if _app.base is a remote url
    var base = location.href.replace(/\/[^/]+$/, '');

    // Add trailing slash if it is not present
    base = makePath(base);

    // Add _app.base if it is present
    if (_app.base) { base = makePath(base, _app.base); }

    if (window._app && window._app.base) {
      base = window._app.base;
      console.log('we in', base);

      function addCss(fileName) {
        var head = document.head;
        var link = document.createElement('link');

        link.type = 'text/css';
        link.rel = 'stylesheet';
        link.href = fileName;

        head.appendChild(link);
      }
      console.log(`${window._app.base}css/report.css`);

      addCss(`${window._app.base}css/report.css`);

      //REPORT_CSS: `${version}/css/report.css`,

      var dojoConfig = {
        parseOnLoad: false,
        async: true,
        packages: [
          { name: 'root', location: getResourcePath(location.href.replace(/\/[^/]+$/, '')) },
          { name: 'js', location: makePath(base, 'js')},
          { name: 'vendor', location: makePath(base, 'vendor')},
          { name: 'utils', location: makePath(base, 'js/utils')},
          { name: 'helpers', location: makePath(base, 'js/helpers')},
          { name: 'report', location: makePath(base, 'js/report')},
          { name: 'constants', location: makePath(base,'js/constants')}
        ],
        aliases: [
          ['resources', 'root/resources'],
          ['babel-polyfill', 'vendor/babel-polyfill/browser-polyfill']
        ],
        deps: ['dojo/domReady!'],
        callback: function () {require(['js/report']);}
      };
    } else {

    var dojoConfig = {
      parseOnLoad: false,
      async: true,
      packages: [
      { name: 'root', location: getResourcePath(location.href.replace(/\/[^/]+$/, '')) },
      { name: 'js', location: makePath(base, 'js')},
      { name: 'vendor', location: makePath(base, 'vendor')},
      { name: 'utils', location: makePath(base, 'js/utils')},
      { name: 'helpers', location: makePath(base, 'js/helpers')},
      { name: 'report', location: makePath(base, 'js/report')},
      { name: 'constants', location: makePath(base,'js/constants')}
      ],
      aliases: [
        ['resources', 'root/resources'],
        ['babel-polyfill', 'vendor/babel-polyfill/browser-polyfill']
      ],
      deps: ['dojo/domReady!'],
      callback: function () {require(['%REPORT_JS%']);}
      };
    }



  //- PROD: if new modules are added, regenerate the JSAPI build
  script(src='https://my.gfw-mapbuilder.org/js/arcgis-api-mapbuilder-1.2/dojo/dojo.js', async)
  //- script(src="https://cdnjs.cloudflare.com/ajax/libs/vega/3.0.7/vega.min.js")
  script(src="https://cdnjs.cloudflare.com/ajax/libs/vega/4.2.0/vega.min.js", charset='UTF-8')

  script.
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
